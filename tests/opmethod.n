class List {
    priv:
        mem
    pub:
        new(a, b) {
            mem = a * b
        }

        op +(x) {
            mem = mem + x
            ret mem
        }

        op -(x) {
            mem = mem - x
            ret mem
        }

        op *(x) {
            mem = mem * x
            ret mem
        }

        op /(x) {
            mem = mem / x
            ret mem
        }

        op >(x) {
            ret mem > x
        }

        op >=(x) {
            ret mem >= x
        }

        op <(x) {
            ret mem < x
        }

        op <=(x) {
            ret mem <= x
        }

        op <<(x) {
            ret mem << x
        }

        op >>(x) {
            ret mem >> x
        }

        op ==(x) {
            ret mem == x
        }

        op !=(x) {
            ret mem != x
        }

        op ^(x) {
            ret mem ^ x
        }

        op |(x) {
            ret mem | x
        }

        op &(x) {
            ret mem & x
        }

        // postfix is desugared as
        // val = obj++:
        // val = obj.++(false)
        // obj.++(true)
        op ++(isprefix) {
            if(isprefix) {
                ++mem
            }
            ret mem
        }

        op --(isprefix) {
            if(isprefix) {
                --mem
            }
            ret mem
        }

        fn getMem() {
            ret mem
        }
}

pub fn test() {
    res = true
    obj = List(2, 3)
    if(obj.getMem() != 6) {
        print("Constructors aren't working!\n")
        res = false
    }
    something = obj + 4
    if(something != 10) {
        print("+(_) is not working\n")
        res = false
    }
    something = obj - 1
    if(something != 9) {
        print("-(_) is not working\n")
        res = false
    }
    something = obj * 4
    if(something != 36) {
        print("*(_) is not working\n")
        res = false
    }
    something = obj / 2
    if(something != 18) {
        print("/(_) is not working\n")
        res = false
    }
    something = obj > 4
    if(!something) {
        print(">(_) is not working\n")
        res = false
    }
    something = obj < 4
    if(something) {
        print("<(_) is not working\n")
        res = false
    }
    something = obj <= 18
    if(!something) {
        print("<=(_) is not working\n")
        res = false
    }
    something = obj >= 19
    if(something) {
        print(">=(_) is not working\n")
        res = false
    }
    something = obj == 19
    if(something) {
        print("==(_) is not working\n")
        res = false
    }
    something = obj != 18
    if(something) {
        print("!=(_) is not working\n")
        res = false
    }
    something = obj ^ 2
    if(something != 16) {
        print("^(_) is not working\n")
        res = false
    }
    something = obj | 2
    if(something != 18) {
        print("|(_) is not working\n")
        res = false
    }
    something = obj & 2
    if(something != 2) {
        print("&(_) is not working\n")
        res = false
    }
    something = obj >> 2
    if(something != 4) {
        print(">>(_) is not working\n")
        res = false
    }
    something = obj << 2
    if(something != 72) {
        print("<<(_) is not working\n")
        res = false
    }
    something = ++obj
    if(something != 19) {
        print("++(true) is not working!\n")
    }
    something = obj++
    if(something != 19) {
        print("++(false) is not working!\n")
    }
    something = --obj
    if(something != 19) {
        print("--(true) is not working!\n")
    }
    something = obj--
    if(something != 19) {
        print("++(false) is not working!\n")
    }

    ret res
}
