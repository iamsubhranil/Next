pub fn test() {
    res = true
    v = true
    if(v.str() != "true") {
        print("[Error] bool.str() is broken!\n")
        res = false
    }
    
    d = 2.8284382828899812898938298
    if(d.str() != "2.82843828289") {
        print("[Error] number.str() is broken!\n")
        res = false
    }
    a = 2.32
    if(a.is_int()) {
        print("[Error] number.is_int() is broken!\n")
        res = false
    }
    a = 2
    if(!a.is_int()) {
        print("[Error] number.is_int() is broken\n")
        res = false
    }
    a = 2919.213
    if(a.to_int() != 2919) {
        print("[Error] number.to_int() is broken\n")
        res = false
    }

    s = "Hello World!"
    if(s.str() != "Hello World!") {
        print("[Error] string.str() is broken!\n")
        res = false
    }
    if(s.len() != 12) {
        print("[Error] string.len() is broken!\n")
        res = false
    }
    
    try {
        s.badPrimitive(d)
        print("[Error] string.badPrimitve() should've resulted in an exception!\n")
        res = false
    } catch(runtime_error e) {}

    try {
        if(s.contains(123)) {
            print("[Error] string.contains(123) should not return true!\n")
            res = false
        }
        print("[Error] string.contains() should not accept 123 as a valid argument!\n")
        res = false
    } catch(type_error e) {}

    if(!s.contains("Hello") or !s.contains("lo Wo") or s.contains("Hola")) {
        print("[Error] string.contains() is broken!\n")
        res = false
    }

    try {
        t = s.append(212)
        print("[Error] string.append() should not accept 212 as a valid argument!\n")
        res = false
    } catch(type_error e) {}

    if(s.append(" Subhranil!") != "Hello World! Subhranil!") {
        print("[Error] string.append() is broken!\n")
        res = false
    }

    ret res
}
